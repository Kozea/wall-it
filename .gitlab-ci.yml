stages:
  - install
  - test
  - deploy_test
  - deploy_prod

.image: &image_deploy_jobs
  image: debian:latest

image: paradoxxxzero/python-node-yarn-postgresql:latest

.artifacts: &artifacts
  artifacts:
    paths:
      - .env/

install:
  stage: install
  script:
    - make install
  <<: *artifacts

test:
  stage: test
  script:
    - make check
  dependencies:
    - install


deploy_test:
  <<: *image_deploy_jobs
  stage: deploy_test
  before_script:
    - "apt-get update && apt-get install -y jq curl"
  script:
    - "res_curl=`curl -m 3600 -H 'Content-Type: application/json' -X POST -d '{\"token\":\"\'\"$TOKEN\"\'\", \"url\":\"\'\"$CI_REPOSITORY_URL\"\'\", \"build_stage\":\"\'\"$CI_JOB_STAGE\"\'\", \"project_name\":\"\'\"$CI_PROJECT_NAME\"\'\", \"branch\":\"\'\"$CI_COMMIT_REF_NAME\"\'\"}' $GERALDINE/ | jq -r \'.success\'` && branch_name=`echo $CI_COMMIT_REF_NAME | tr -cd '[[:alnum:]]'` && get=`curl -s -o -I -w \"%{http_code}\" http://test-$CI_PROJECT_NAME-$branch_name.kozea.fr` && ([[ $get = 302 || $get = 200 ]] && [[ $res_curl = 0 ]]) && exit_val=0 || exit_val=1 && exit $exit_val"
  dependencies: []

deploy_prod:
  <<: *image_deploy_jobs
  stage: deploy_prod
  before_script:
    - "apt-get update && apt-get install -y jq curl"
  script:
    - "res_curl=`curl -m 3600 -H 'Content-Type: application/json' -X POST -d '{\"token\":\"\'\"$TOKEN\"\'\", \"build_stage\":\"\'\"$CI_JOB_STAGE\"\'\", \"project_name\":\"\'\"$CI_PROJECT_NAME\"\'\", \"branch\":\"\'\"$CI_COMMIT_REF_NAME\"\'\"}' $GERALDINE/ | jq -r \'.success\'` && get=`curl -s -o -I -w \"%{http_code}\" http://wall-it.kozea.fr` && ([[ $get = 302 || $get = 200 ]] && [[ $res_curl = 0 ]]) && exit_val=0 || exit_val=1 && exit $exit_val"
  dependencies: []
  only:
    - master
